TODO list (to get the sequential phase looking good)
Note: (0.2 #x) means do this for 0.2 release, in order of x. 
0.2 planned release notes: Better S&R, maybe ready for general use; initial SystemC support; sequential phase at alpha or beta; doxygen and generally better documentation

- fix ForToWhile, cannot use GG in slave if master has already dirtied.
- Make break and continue be uncombable
- allow breaks in combable switches: but only top level modulo raw compounds (use cleanup step?) 
- for to allow eg ++i, steps, backward - be optimistic about increment direction versus limits direction.

only generate stacks for non-leaf functions (sensiblising) (0.2 #5)

test with multiple SC_THREAD, since this is nominally supported, let's keep it working (0.2 #6)
   - funciton merging needs fixing so it does not kill the callee, in case other threads call it. A seperate kill uncalled functions
     cleanup can get rid of these. This means possible duplication of callee though - the ultimate solution would be to make a seperate
     server for them, but we're not doing servers yet.

figure out how to keep using the non-SC tests (0.2 #7 but not if hard)

Update sequential phase docs (0.2 #8)

Fix the dependency fault if not done already (0.2 #9)
   - something to do with stuff in SR depending on tree I think
   - try and use the TransformTo model
   - otherwise got to put 

Sweep for TODOs in code, but quite high theshold (0.2 #10)

add comments in sctree, like in cpptree (0.2 #11)

Doxygen comments for all the steps (0.2 #12)

Ensure SR docs up to date (0.2 #13)
   - Also make the new PointerTo node look sensible in graphs
   - will have to look at diffs from the summer to remind myself, sadly

Get web page to reference all the docs (0.2 #14)
   - including this one

-- post 0.2 --

sc_signal support
   - maybe just replace all fundy types
   - not sure where to put, earlier means new vars generated after step, later reduces usefulness of trace
   - allowed everywhere though
   - sc_signal for enums to be only just wide enough - make sure this works with state variables

sc_trace for all sc_signals so they appear in VCD files (VCD trace otherwise done)
   - due to statically declared modules strategy, output name must be trace.vcd, so move in test.sh etc

fix steps with too-strong "and-not" clauses 
   - like UseTempForReturnValue, for example 

assertions for redundant intermediates? - no, builtin_return_address() will not match link label if there's caller-side epilog code

tidy-up step to move module member temps back down into a function temp where possible (sensiblising)

deal with returning from a thread module correctly (for elegance mostly)
   - SC terminates when no pending events
   - need to be able to exit the superloop in a SC_THREAD
   - and fail to next_trigger() in SC_MEHTOD
   - I think we already generate explicit return statements, so act on these during ThreadToMethod
   
get rid of Callable, CallableParams, Procedure etc. It's all guff. Just have Function

add ability to lower wait(X) into yielding wait loop 
   - not really critical at this stage, but makes the intention clearer for SC users
   - moved out of 0.2, not actually sure if belongs in sequential phase
