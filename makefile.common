# If including this from a subdirectory, preset LEVEL the the required amount of ..
LEVEL ?= .

# Compiler used for Inferno, LLVM and clang 
ICC ?= g++

# Compiler used for resources
RCC ?= g++

# Standard tools
AR ?= ar
MAKE ?= make
 
# Options applied to Inferno, LLVM and clang 
ILC_OPTIONS +=
 
# Use the C++11 standard 
OPTIONS += -std=c++11
 
# [for clang] There are LOTS of missing overrides see #452
OPTIONS += -Wno-inconsistent-missing-override 

# [for clang] our TRACE and ASSERT macros use dangling else in a safe way
OPTIONS += -Wno-dangling-else

# [for clang] don't worry about side-effects in typeid() expressions
OPTIONS += -Wno-potentially-evaluated-expression

# No path needed when include file is in same directory
OPTIONS += -I.

# Warn if return is missing
OPTIONS += -Wreturn-type

# Warn if variable looks like used before init
OPTIONS += -Wuninitialized -Wmaybe-uninitialized

# Treat all warnings as errors 
OPTIONS += -Werror

# Make the build abort after the first error
OPTIONS += -Wfatal-errors

# Optimisation level.
OPTIONS += -Og

# We supply an ASSERT handler in common/trace.cpp
OPTIONS += -DBOOST_ENABLE_ASSERT_HANDLER

# Enable gdb debugging
OPTIONS += -ggdb3

# Enable gprof profiling (slows compile times)
#OPTIONS += -pg

# Workaround compile error with SystemC
OPTIONS += -fpermissive

OPTIONS += -fPIC

# Generate include deps
OPTIONS += -MMD

# For boost
OPTIONS += -DBOOST_CONTEXT_STATIC_LINK
OPTIONS += -DBOOST_NO_CXX14_STD_EXCHANGE
OPTIONS += -DBOOST_NO_CXX17_STD_INVOKE

# For including llvm/clang header files
BUILD = Debug
LLVM = $(LEVEL)/llvm
CLANG = $(LLVM)/tools/clang
OPTIONS += -I$(LLVM)/include -I$(CLANG)/include
OPTIONS += -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS

# Dependencies to add for all compiles
DEPS = makefile.common makefile src/makefile

# For compiling on multi-core machines
JOBS=3

